<html>
<head>
    <title>Home Page</title>

    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">

const Cars = (props) => {
  const listCars = props.data.map((car) =>
  <li key={car._id} id={car.id} onClick={props.clickHandler}>
      {car.name}
  </li>);
  return <ul>{listCars}</ul>
}

const CarDetail = (props) => {
  return <div>Detail<hr/>
    <form>
      Brand: <input type="text" name="brand" onChange={props.handleChange} value={props.car.brand || ""} /><br />
      Name: <input type="text" name="name" onChange={props.handleChange} value={props.car.name || ""} /><br />
      Horsepower: <input type="number" name="horsepower" onChange={props.handleChange} value={props.car.horsepower || ""} /><br />
      Price: <input type="number" name="price" onChange={props.handleChange} value={props.car.price || ""} /><br />
    </form>
    <button name="clear" onClick={props.clearForm}>Clear</button>&nbsp;
    <button name="save" onClick={props.saveItem}>Save</button>&nbsp;
    <button name="delete" onClick={props.deleteItem}>Delete</button>&nbsp;
    </div>
}

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      cars : <%- cars %>,
      currentCar: {} 
    };
    this.showDetail = this.showDetail.bind(this);
    this.fieldChanged = this.fieldChanged.bind(this);
    this.clearForm = this.clearForm.bind(this);
    this.saveItem = this.saveItem.bind(this);
    this.deleteItem = this.deleteItem.bind(this);
  }

  showDetail = (event) => {
    let title = event.target.innerText;
    let newItem = this.state.cars.find((car) => car.name == title);
    this.setState({"currentCar": newItem})
  }

  fieldChanged = (event) => {
    let newItem = this.state.currentCar;
    newItem[event.target.name] = event.target.value;
    this.setState({currentCar: newItem})
  }

  clearForm = () => {
    this.setState({currentCar: {}});
  }

  saveItem = () => {
    if (console.log(this.state.currentCar) == {}) return
    let newCar = this.state.currentCar;
    fetch("/api/add", {
       method: "POST",
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify(this.state.currentCar)
    })
      .then(res => res.json())
      .then((json) => { 
        console.log(json) 
        if (json.updated === 0) {
          newCar._id = json._id
          let newList = this.state.cars;
          newList.push(newCar);
          this.setState({cars: newList})
        }
      });
  }

  deleteItem = () => {
    if (console.log(this.state.currentCar) == {}) return
    let deleteName = this.state.currentCar.name
    let url = "/api/delete/" + deleteName;
    fetch(url)
      .then(res => res.json())
      .then((json) => { 
        console.log(json) 
        if (json.deleted.deletedCount > 0) {
          this.setState({currentCar: {}})
          let newList = this.state.cars.filter(car => {
            return car.name != deleteName;
          })
          this.setState({cars: newList, currentCar: {}})
        }
      });
  }

  render() {
    return (
      <div>
        <h2>Car List</h2>
        <Cars data={this.state.cars} clickHandler={this.showDetail} />
        <CarDetail 
          car={this.state.currentCar} 
          handleChange={this.fieldChanged} 
          clearForm={this.clearForm}
          saveItem={this.saveItem}
          deleteItem={this.deleteItem}
          />
      </div>
    );
  }
}

//ReactDOM.render(<CarList cars={items} />, document.getElementById('root'));
ReactDOM.render(<App />, document.getElementById('root'));

</script>
</body>
</html>